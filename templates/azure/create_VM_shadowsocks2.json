{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "maxLength": 16,
            "defaultValue":"newVM",
            "metadata":{
                "description": "test description"
            }
        }
    },
    "variables": {
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks','myVNet')]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/mySubnet')]",
        "vmName" : "[parameters('vmName')]"
    },
    "resources": [
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "myPublicIPAddress",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "myVNet",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "mySubnet",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "myNic",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', 'myPublicIPAddress')]",
                "[resourceId('Microsoft.Network/virtualNetworks/', 'myVNet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses','myPublicIPAddress')]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
            {
                "type": "Microsoft.Network/networkSecurityGroups",
                "name": "nsg_test_1_name",
                "apiVersion": "2018-02-01",
                "location": "westeurope",
                "scale": null,
                "properties": {
                    "securityRules": [],
                    "defaultSecurityRules": [
                        {
                        "name": "default-allow-ssh",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                            }
                        }
                    ]
                }
            },
        {
            "apiVersion": "2016-04-30-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', 'myNic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Basic_A0"
                },
                "osProfile": {
                    "computerName": "MyVM",
                    "adminUsername": "linux-admin",
                    "adminPassword": "Test12345678"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "myManagedOSDisk",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','myNic')]"
                        }
                    ]
                }
            }
        },
       {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/hello')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/w0nders/solutions/master/scripts/create_shadowsocks_cfg.sh"
          ],
          "commandToExecute": "sh create_shadowsocks_cfg.sh"
        }
            }
        }

    ]
}
